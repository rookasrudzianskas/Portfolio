{"remainingRequest":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/src/App.vue","mtime":1624818062624},{"path":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/node_modules/cache-loader/dist/cjs.js","mtime":1624884932294},{"path":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/node_modules/babel-loader/lib/index.js","mtime":1624884915153},{"path":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/node_modules/cache-loader/dist/cjs.js","mtime":1624884932294},{"path":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/node_modules/vue-loader/lib/index.js","mtime":1624817635056}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// styles\nimport '@/styles/app.scss';\nimport '@/styles/nprogress.scss';\n// GSAP + ScrollMagic\nimport * as ScrollMagic from \"scrollmagic\";\nimport { TweenMax, TimelineMax } from \"gsap\";\nimport { ScrollMagicPluginGsap } from \"scrollmagic-plugin-gsap\";\nScrollMagicPluginGsap(ScrollMagic, TweenMax, TimelineMax);\n// Components\nimport Header from '@/components/Header.vue';\nimport Spine from '@/components/Spine.vue';\nimport BgBody from '@/components/BgBody.vue';\n\nexport default {\n    name: 'App',\n    data() {\n        return {\n            viewport: {\n                w: window.innerWidth,\n                h: window.innerHeight,\n                is568: window.innerWidth <= 568,\n                is768: window.innerWidth <= 768,\n                is1024: window.innerWidth <= 1024,\n            },\n            introTimeline: new TimelineMax(),\n            leaveTimeline: new TimelineMax(),\n        };\n    },\n    created() {\n        // update viewport\n        this.updateViewport();\n        // add resize listener\n        window.addEventListener('resize', this.updateViewport);\n        // add beforeunload listener, in case of refresh\n        window.addEventListener(\"beforeunload\", () => window.scroll(0,0));\n    },\n    methods: {\n        enter(el, done) {\n            // intro animations\n            this.introTimeline\n                .clear()\n                .addLabel('enter', 0)\n                .fromTo('.header-breadcrumb', 1, {\n                    autoAlpha: 0,\n                    x: -32,\n                }, {\n                    autoAlpha: 1,\n                    x: 0,\n                    ease: Power3.easeOut,\n                }, 'enter')\n                .fromTo(el, 1, {\n                    autoAlpha: 0\n                }, {\n                    autoAlpha: 1,\n                }, 'enter')\n                .fromTo('.spine', 1, {\n                    autoAlpha: 0,\n                    yPercent: 20,\n                }, {\n                    autoAlpha: 1,\n                    yPercent: 0,\n                    ease: Power3.easeOut,\n                    onComplete: done\n                }, 'enter')\n                .fromTo('.spine-target .circle', 1, {\n                    scale: 0,\n                    autoAlpha: 0\n                }, {\n                    scale: 1,\n                    autoAlpha: 1,\n                    ease: Elastic.easeOut.config(1, 0.5)\n                }, 'enter+=.7')\n                .fromTo('.spine-target .circle', 2, {\n                    backgroundColor: 'transparent',\n                }, {\n                    backgroundColor: '#5918df',\n                }, 'enter+=1.2')\n                .fromTo('.spine-target .pulse', 4, {\n                    autoAlpha: 1,\n                    scale: 0,\n                }, {\n                    autoAlpha: 0,\n                    scale: 8,\n                    ease: Power3.easeOut,\n                }, 'enter+=1.2');\n        },\n        leave(el, done) {\n            // leave animations\n            this.leaveTimeline\n                .clear()\n                .addLabel('leave', 0)\n                .to('.spine-target .circle, .spine-target .pulse', .5, {\n                    scale: 0,\n                    autoAlpha: 0,\n                    ease: Power3.easeIn\n                }, 'leave')\n                .to('.spine', .5, {\n                    autoAlpha: 0,\n                    yPercent: 50,\n                    ease: Power3.easeIn\n                }, 'leave+=.25')\n                .set('.header-breadcrumb', {autoAlpha: 0}, 'leave')\n                .to(el, 1, {\n                    autoAlpha: 0,\n                    onComplete: done\n                }, 'leave');\n        },\n        updateViewport() {\n            // update\n            this.viewport = {\n                w: window.innerWidth,\n                h: window.innerHeight,\n                is568: window.innerWidth <= 568,\n                is768: window.innerWidth <= 768,\n                is1024: window.innerWidth <= 1024,\n            }\n        },\n    },\n    components: {\n        Header,\n        Spine,\n        BgBody,\n    },\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"App.vue","sourceRoot":"src","sourcesContent":["\n<template>\n    <div id=\"app\" :class=\"this.$route.meta.bodyClass\">\n        <BgBody />\n\n        <Header :routeName=\"this.$route.name\"\n                :viewport=\"viewport\" />\n\n        <transition appear\n                    mode=\"out-in\"\n                    :css=\"false\"\n                    @leave=\"leave\"\n                    @enter=\"enter\">\n\n            <router-view :viewport=\"viewport\" />\n\n        </transition>\n\n        <Spine />\n    </div>\n</template>\n\n<script>\n    // styles\n    import '@/styles/app.scss';\n    import '@/styles/nprogress.scss';\n    // GSAP + ScrollMagic\n    import * as ScrollMagic from \"scrollmagic\";\n    import { TweenMax, TimelineMax } from \"gsap\";\n    import { ScrollMagicPluginGsap } from \"scrollmagic-plugin-gsap\";\n    ScrollMagicPluginGsap(ScrollMagic, TweenMax, TimelineMax);\n    // Components\n    import Header from '@/components/Header.vue';\n    import Spine from '@/components/Spine.vue';\n    import BgBody from '@/components/BgBody.vue';\n\n    export default {\n        name: 'App',\n        data() {\n            return {\n                viewport: {\n                    w: window.innerWidth,\n                    h: window.innerHeight,\n                    is568: window.innerWidth <= 568,\n                    is768: window.innerWidth <= 768,\n                    is1024: window.innerWidth <= 1024,\n                },\n                introTimeline: new TimelineMax(),\n                leaveTimeline: new TimelineMax(),\n            };\n        },\n        created() {\n            // update viewport\n            this.updateViewport();\n            // add resize listener\n            window.addEventListener('resize', this.updateViewport);\n            // add beforeunload listener, in case of refresh\n            window.addEventListener(\"beforeunload\", () => window.scroll(0,0));\n        },\n        methods: {\n            enter(el, done) {\n                // intro animations\n                this.introTimeline\n                    .clear()\n                    .addLabel('enter', 0)\n                    .fromTo('.header-breadcrumb', 1, {\n                        autoAlpha: 0,\n                        x: -32,\n                    }, {\n                        autoAlpha: 1,\n                        x: 0,\n                        ease: Power3.easeOut,\n                    }, 'enter')\n                    .fromTo(el, 1, {\n                        autoAlpha: 0\n                    }, {\n                        autoAlpha: 1,\n                    }, 'enter')\n                    .fromTo('.spine', 1, {\n                        autoAlpha: 0,\n                        yPercent: 20,\n                    }, {\n                        autoAlpha: 1,\n                        yPercent: 0,\n                        ease: Power3.easeOut,\n                        onComplete: done\n                    }, 'enter')\n                    .fromTo('.spine-target .circle', 1, {\n                        scale: 0,\n                        autoAlpha: 0\n                    }, {\n                        scale: 1,\n                        autoAlpha: 1,\n                        ease: Elastic.easeOut.config(1, 0.5)\n                    }, 'enter+=.7')\n                    .fromTo('.spine-target .circle', 2, {\n                        backgroundColor: 'transparent',\n                    }, {\n                        backgroundColor: '#5918df',\n                    }, 'enter+=1.2')\n                    .fromTo('.spine-target .pulse', 4, {\n                        autoAlpha: 1,\n                        scale: 0,\n                    }, {\n                        autoAlpha: 0,\n                        scale: 8,\n                        ease: Power3.easeOut,\n                    }, 'enter+=1.2');\n            },\n            leave(el, done) {\n                // leave animations\n                this.leaveTimeline\n                    .clear()\n                    .addLabel('leave', 0)\n                    .to('.spine-target .circle, .spine-target .pulse', .5, {\n                        scale: 0,\n                        autoAlpha: 0,\n                        ease: Power3.easeIn\n                    }, 'leave')\n                    .to('.spine', .5, {\n                        autoAlpha: 0,\n                        yPercent: 50,\n                        ease: Power3.easeIn\n                    }, 'leave+=.25')\n                    .set('.header-breadcrumb', {autoAlpha: 0}, 'leave')\n                    .to(el, 1, {\n                        autoAlpha: 0,\n                        onComplete: done\n                    }, 'leave');\n            },\n            updateViewport() {\n                // update\n                this.viewport = {\n                    w: window.innerWidth,\n                    h: window.innerHeight,\n                    is568: window.innerWidth <= 568,\n                    is768: window.innerWidth <= 768,\n                    is1024: window.innerWidth <= 1024,\n                }\n            },\n        },\n        components: {\n            Header,\n            Spine,\n            BgBody,\n        },\n    };\n</script>\n"]}]}