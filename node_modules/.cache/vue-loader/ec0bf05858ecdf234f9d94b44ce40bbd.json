{"remainingRequest":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/src/views/work/Confianca.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/src/views/work/Confianca.vue","mtime":1558428182000},{"path":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/node_modules/cache-loader/dist/cjs.js","mtime":1624817633561},{"path":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/node_modules/babel-loader/lib/index.js","mtime":1624817626029},{"path":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/node_modules/cache-loader/dist/cjs.js","mtime":1624817633561},{"path":"/Users/rookasrudzianskas/Documents/46_VUE/01_PORTFOLIO/node_modules/vue-loader/lib/index.js","mtime":1624817635056}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// styles\nimport '@/styles/work.scss'\nimport '@/styles/work/confianca.scss'\n// ScrollMagic\nimport * as ScrollMagic from \"scrollmagic\";\n\nexport default {\n    name: 'confianca',\n    props: {\n        viewport: Object,\n    },\n    data() {\n        return {\n            intro: new TimelineMax(),\n            scroller: new ScrollMagic.Controller(),\n            qty: 0,\n        }\n    },\n    methods: {\n        addQty(){\n            if (this.qty === 10) return false; // limit\n            return this.qty++\n        },\n        removeQty(){\n            if(this.qty <= 1) return this.qty = 0;\n            return this.qty--;\n        },\n    },\n    mounted() {\n\n        /**\n         * @desc\n         * Intro scene\n         */\n        this.intro\n            .clear(true)\n            .addLabel('enter', 1)\n            .from('.title', 2, {\n                autoAlpha: 0,\n                rotationX: 20,\n                transformOrigin: '50% 50% -100px',\n                ease: Power3.easeOut,\n            }, 'enter')\n            .from('.std', 2, {\n                autoAlpha: 0,\n                x: -32,\n                ease: Power3.easeOut,\n            }, 'enter+=1.5');\n\n        /**\n         * @desc\n         * bg color scene\n         */\n        let sceneBg = new ScrollMagic.Scene({\n            triggerElement: '.project-start',\n            offset: this.viewport.h/4,\n            duration: document.body.offsetHeight\n        })\n            .addTo(this.scroller)\n            .reverse(true);\n        sceneBg\n            .on('enter', (e) => {\n                document.body.classList.add('-confianca-bg');\n            })\n            .on('leave', (e) => {\n                if(e.scrollDirection === 'REVERSE') {\n                    document.body.classList.remove('-confianca-bg');\n                }\n            });\n\n        /**\n         * @desc\n         * mobile screens scene\n         */\n        let tlMobile = new TimelineMax();\n\n        tlMobile\n            .staggerFrom('.screen', 4, {\n                autoAlpha: 0,\n                yPercent: 25,\n                stagger: .5,\n                ease: Power3.easeOut,\n            });\n\n        let sceneMobile = new ScrollMagic.Scene({\n            triggerElement: '.project-start',\n            offset: -this.viewport.h / 4,\n            duration: this.viewport.h\n        })\n            .setTween(tlMobile)\n            .addTo(this.scroller)\n            .reverse(true)\n            .setClassToggle('.mobile-screens', \"active\");\n\n        /**\n         * @desc\n         * scroll screens scene\n         */\n        let tlScrolls = new TimelineMax();\n\n        tlScrolls\n            .to('.scroll-pages img', 4, {\n                top: '-100%',\n            })\n            .to('.scroll-pages .mobile', 4, {\n                yPercent: 20,\n            }, 0);\n\n        let sceneScrolls = new ScrollMagic.Scene({\n            triggerElement: '.scroll-pages',\n            duration: this.viewport.h\n        })\n            .setTween(tlScrolls)\n            .addTo(this.scroller)\n            .reverse(true)\n            .setClassToggle('.scroll-pages', \"active\");\n\n        /**\n         * @desc\n         * end screens scene\n         */\n        let tlEnd = new TimelineMax(),\n            end = document.querySelector('.end-screens').offsetHeight;\n\n        tlEnd\n            .staggerFrom('.end-screens .screen', 4, {\n                xPercent: -50,\n                ease: Power3.easeOut,\n                stagger: .2\n            });\n\n        let sceneEnd = new ScrollMagic.Scene({\n            triggerElement: '.end-screens',\n            offset: -end,\n            duration: end\n        })\n            .setTween(tlEnd)\n            .addTo(this.scroller)\n            .reverse(true)\n            .setClassToggle('.end-screens', \"active\");\n\n    },\n    beforeDestroy() {\n\n        this.scroller.destroy();\n\n    }\n};\n",{"version":3,"sources":["Confianca.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4MA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA","file":"Confianca.vue","sourceRoot":"src/views/work","sourcesContent":["<template>\n    <div id=\"confianca\" class=\"wrapper\">\n\n        <div class=\"static-container\">\n            <h1 class=\"title\">\n                work<br v-if=\"viewport.is568\">(<span class=\"params\">'Confiança'</span>)\n            </h1>\n\n            <div class=\"std\">\n                <p class=\"-purple -full\" v-if=\"viewport.is568\">\n                    // Head of Project<br>\n                    // UX/UI<br>\n                    // Frontend<br>\n                    // Magento v1<br>\n                </p>\n                <p class=\"-purple -full\" v-else>\n                    // Head of Project, UX/UI and Frontend<br>\n                    // Magento v1\n                </p>\n                <a href=\"https://www.confianca.com.br\" title=\"Access website\" target=\"_blank\" class=\"bt\">\n                    confianca.com.br <svg class=\"nav-ico -blank\" viewBox=\"0 0 16 16\"><path d=\"M5,1h10v10 M5.5,10.5l0.8-0.8\"/></svg>\n                </a>\n\n                <h2 class=\"subtitle\">\n                    Less choices,<br>\n                    more confidence\n                </h2>\n                <p class=\"-gray\">\n                    Confiança is a supermarket chain operating in several cities within state of São\n                    Paulo, Brazil. A few years ago they started their first e-commerce, but with the growing need for\n                    flexibility, the platform needed to be redesigned.\n                </p>\n            </div>\n\n            <div class=\"project-start\"></div>\n\n            <div class=\"mobile-screens\" role=\"img\" aria-labelledby=\"mobileScreensAlt\">\n                <p id=\"mobileScreensAlt\" class=\"ariaLabel\">Five screens of smartphones showing different pages and features of this web delivery application</p>\n                <div class=\"screen s1\"></div>\n                <div class=\"screen s2\"></div>\n                <div class=\"screen s3\"></div>\n                <div class=\"screen s4\"></div>\n                <div class=\"screen s5\"></div>\n            </div>\n\n            <div class=\"std\">\n                <h3 class=\"-red\">// Problems</h3>\n                <ul>\n                    <li>Slow and poor navigation</li>\n                    <li>extensive purchase flow</li>\n                    <li>difficulty to customize orders</li>\n                    <li>messy mobile</li>\n                </ul>\n                <h3 class=\"-green\">// My role</h3>\n                <p>\n                    I was responsible for the project concept and its implementation.<br>\n                    Designing views, the frontend between Magento and Vue.js, and setting up the integration API scope for our development team - since Magento v1 did not have an API that would meet the needs of the project.\n                </p>\n\n                <h2 class=\"subtitle\">Endless flow</h2>\n                <p>\n                    All the loading was hidden from the user, making navigation completely free from the system's needs, allowing for a much faster and enjoyable experience. The user only sees some loading when there is a problem, otherwise, we never bother the user with processes like checking stock, updating shipping rates or anything \"taken for granted\" on an ideal scenario.<br>\n                    The rate of errors or moments when we need to show some important information occurs with less than 10% of the users, and all the others 90% enjoy a hassle free experience.\n                </p>\n\n                <h2 class=\"subtitle\">\n                    One button<br>\n                    to rule them all\n                </h2>\n\n                <div class=\"oneButton-placeholder\">\n                    <div class=\"oneButton-container\">\n                        <button class=\"oneButton\" type=\"button\" title=\"Click to buy\" @click=\"addQty\">\n                            <span class=\"label\">buy</span>\n                        </button>\n                        <div class=\"oneButton-aside\" :class=\"{ 'hide': qty < 1 }\">\n                            <button class=\"minus\" type=\"button\" title=\"Click to remove 1\" @click=\"removeQty\">\n                                <span class=\"label\">\n                                    <template v-if=\"qty === 1\">✕</template>\n                                    <template v-else>-</template>\n                                </span>\n                            </button>\n                            <div class=\"label\">+1</div>\n                            <button class=\"plus\" type=\"button\" title=\"Click to add 1\" @click=\"addQty\">\n                                <span class=\"label\">+</span>\n                            </button>\n                        </div>\n                        <transition>\n                            <div class=\"counter\" v-show=\"qty > 0\">{{qty}}</div>\n                        </transition>\n                    </div>\n                </div>\n\n                <p>\n                    To further increase speed, we needed to narrow the choices. Yes, choices are important, but we don't want to have choose all the time.<br>\n                    The easier and simpler the choice, the better our brain will react to it, as we feel less pressured.<br>\n                    Thus several \"unnecessary\" choices were incorporated directly into the buy button:\n                </p>\n                <ul>\n                    <li>\n                        <strong class=\"-purple\">Stock validation</strong><br>\n                        You don't need to worry about the stock, it is impossible to buy above stock or any quantity that is not available for that item at that time.<br>\n                        The stock system is updated in real time and then it updates all the rules for every item.\n                    </li>\n                    <li>\n                        <strong class=\"-purple\">Increase or decrease quantity</strong><br>\n                        With 1 click you control the quantity, and if the product is sold in increments, this is already calculated automatically.<br>\n                        If you type the quantity the system rounds it to a valid number automatically.\n                    </li>\n                    <li>\n                        <strong class=\"-purple\">You get what you asked for</strong><br>\n                        If the price or any other value for that product is affected by the quantity, it is instantaneously updated throughout the whole interface.\n                        So even if you already have that item in the cart, all the prices and shipping rates you see are exactly the ones you will pay.\n                    </li>\n                    <li>\n                        <strong class=\"-purple\">It does what it’s supposed to do</strong><br>\n                        By clicking the button you add an item to the cart, if you repeat the action you keep adding items. Simple.\n                    </li>\n                </ul>\n                <p>\n                    This decreases several steps of a normal process such as validating stock after adding an item, warning you after a page reload that this product is only available in increments of 3 and leaving you with the math.<br>\n                    And even have a cart page to edit your order is no longer necessary.\n                </p>\n            </div>\n            \n            <div class=\"scroll-pages\">\n                <div class=\"desktop\">\n                    <img src=\"@/assets/work/confianca/scroll-desktop.jpg\" alt=\"The home page for the desktop version of Confiança Delivery scrolling inside a screen\">\n                </div>\n                <div class=\"mobile\">\n                    <div class=\"case\">\n                        <img src=\"@/assets/work/confianca/scroll-mobile.jpg\" alt=\"The home page for the mobile version of Confiança Delivery scrolling inside a smartphone screen\">\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"std\">\n\n                <h2 class=\"subtitle\">\n                    Less walking,<br>\n                    more buying\n                </h2>\n                <p>\n                    Instead of having fragmented navigation that leads you to navigate the categories, we've chosen to keep the user in the same place, allowing them to do as much as possible.\n                </p>\n                <p>\n                    The search was made to be extremely fast, with a great auto-complete, and at the same time work like any other catalog page.\n                </p>\n                <p>\n                    When you buy an item, you see a few options to continue buying other items you normally purchase together, avoiding the need to search in most cases.\n                </p>\n                <p>\n                    The login, the cart, the shipping, and the discount steps were merged into a single tab and can be viewed and edited at any time without the need to stop buying.\n                </p>\n\n                <h2 class=\"subtitle\">\n                    Customize on the fly\n                </h2>\n                <p>\n                    The users are able to add notes to each item in their order and ask for specific details if they want to. These notes can be edited at any time, at any step before the checkout.\n                </p>\n\n                <h2 class=\"subtitle fillLikeHome\">\n                    Fell like home\n                </h2>\n                <p>\n                    I've tried to create an interface that does not contrast with any other interface that a regular smartphone user has not already seen, and thus create a sense of comfort, like knowing what to do and what will happen when clicking something.<br>\n                    This feeling is fundamental when you want to take your design out of the way and let the actions take the spotlight.\n                </p>\n\n            </div>\n\n            <nav class=\"work-nav\">\n                <h3>// More...</h3>\n                <ul>\n                    <li class=\"prev\">\n                        <router-link to=\"/work/desbravando\" title=\"Desbravando\">\n                            <svg class=\"nav-ico -prev\" viewBox=\"0 0 16 16\"><path d=\"M5,1h10v10 M5.5,10.5l0.8-0.8\"/></svg>\n                            Desbravando...\n                        </router-link>\n                    </li>\n                    <li class=\"next\">\n                        <router-link to=\"/work/admin-panel\" title=\"Admin Panel\">\n                            ...Admin Panel\n                            <svg class=\"nav-ico -next\" viewBox=\"0 0 16 16\"><path d=\"M5,1h10v10 M5.5,10.5l0.8-0.8\"/></svg>\n                        </router-link>\n                    </li>\n                </ul>\n            </nav>\n\n            <div class=\"end-screens\" aria-labelledby=\"endScreensAlt\">\n                <p id=\"endScreensAlt\" class=\"ariaLabel\">Four screens of smartphones showing different actions of this web delivery application</p>\n                <div class=\"screen s1\"></div>\n                <div class=\"screen s2\"></div>\n                <div class=\"screen s3\"></div>\n                <div class=\"screen s4\"></div>\n            </div>\n\n        </div>\n\n    </div>\n</template>\n\n<script>\n    // styles\n    import '@/styles/work.scss'\n    import '@/styles/work/confianca.scss'\n    // ScrollMagic\n    import * as ScrollMagic from \"scrollmagic\";\n\n    export default {\n        name: 'confianca',\n        props: {\n            viewport: Object,\n        },\n        data() {\n            return {\n                intro: new TimelineMax(),\n                scroller: new ScrollMagic.Controller(),\n                qty: 0,\n            }\n        },\n        methods: {\n            addQty(){\n                if (this.qty === 10) return false; // limit\n                return this.qty++\n            },\n            removeQty(){\n                if(this.qty <= 1) return this.qty = 0;\n                return this.qty--;\n            },\n        },\n        mounted() {\n\n            /**\n             * @desc\n             * Intro scene\n             */\n            this.intro\n                .clear(true)\n                .addLabel('enter', 1)\n                .from('.title', 2, {\n                    autoAlpha: 0,\n                    rotationX: 20,\n                    transformOrigin: '50% 50% -100px',\n                    ease: Power3.easeOut,\n                }, 'enter')\n                .from('.std', 2, {\n                    autoAlpha: 0,\n                    x: -32,\n                    ease: Power3.easeOut,\n                }, 'enter+=1.5');\n\n            /**\n             * @desc\n             * bg color scene\n             */\n            let sceneBg = new ScrollMagic.Scene({\n                triggerElement: '.project-start',\n                offset: this.viewport.h/4,\n                duration: document.body.offsetHeight\n            })\n                .addTo(this.scroller)\n                .reverse(true);\n            sceneBg\n                .on('enter', (e) => {\n                    document.body.classList.add('-confianca-bg');\n                })\n                .on('leave', (e) => {\n                    if(e.scrollDirection === 'REVERSE') {\n                        document.body.classList.remove('-confianca-bg');\n                    }\n                });\n\n            /**\n             * @desc\n             * mobile screens scene\n             */\n            let tlMobile = new TimelineMax();\n\n            tlMobile\n                .staggerFrom('.screen', 4, {\n                    autoAlpha: 0,\n                    yPercent: 25,\n                    stagger: .5,\n                    ease: Power3.easeOut,\n                });\n\n            let sceneMobile = new ScrollMagic.Scene({\n                triggerElement: '.project-start',\n                offset: -this.viewport.h / 4,\n                duration: this.viewport.h\n            })\n                .setTween(tlMobile)\n                .addTo(this.scroller)\n                .reverse(true)\n                .setClassToggle('.mobile-screens', \"active\");\n\n            /**\n             * @desc\n             * scroll screens scene\n             */\n            let tlScrolls = new TimelineMax();\n\n            tlScrolls\n                .to('.scroll-pages img', 4, {\n                    top: '-100%',\n                })\n                .to('.scroll-pages .mobile', 4, {\n                    yPercent: 20,\n                }, 0);\n\n            let sceneScrolls = new ScrollMagic.Scene({\n                triggerElement: '.scroll-pages',\n                duration: this.viewport.h\n            })\n                .setTween(tlScrolls)\n                .addTo(this.scroller)\n                .reverse(true)\n                .setClassToggle('.scroll-pages', \"active\");\n\n            /**\n             * @desc\n             * end screens scene\n             */\n            let tlEnd = new TimelineMax(),\n                end = document.querySelector('.end-screens').offsetHeight;\n\n            tlEnd\n                .staggerFrom('.end-screens .screen', 4, {\n                    xPercent: -50,\n                    ease: Power3.easeOut,\n                    stagger: .2\n                });\n\n            let sceneEnd = new ScrollMagic.Scene({\n                triggerElement: '.end-screens',\n                offset: -end,\n                duration: end\n            })\n                .setTween(tlEnd)\n                .addTo(this.scroller)\n                .reverse(true)\n                .setClassToggle('.end-screens', \"active\");\n\n        },\n        beforeDestroy() {\n\n            this.scroller.destroy();\n\n        }\n    };\n</script>\n"]}]}